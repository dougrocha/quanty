{
  "name": "app-backend",
  "version": "1.0.0",
  "description": "",
  "author": "",
  "private": true,
  "license": "MIT",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "prisma generate && swc src -s -d ./dist && tsc -p tsconfig.build.json",
    "start": "nest start",
    "test:dev": "node -r @swc/register src/main.ts",
    "debug": "nest start --debug --watch",
    "dev": "cross-env NODE_ENV=development nest start --watch",
    "watch-devs": "concurrently \"yarn watch-compile\" \"yarn watch-tsc\" \"yarn watch-dev\"",
    "watch-compile": "swc src -w -s -d ./dist",
    "watch-prisma": "prisma generate --watch",
    "watch-dev": "nodemon --delay 1 --watch \"dist/**/*\" -e js ./dist/main.js",
    "watch-tsc": "tsc -w --pretty --skipLibCheck --noEmit -p tsconfig.json",
    "start:prod": "cross-env NODE_ENV=production node dist/src/main",
    "lint": "cross-env TIMING=1 eslint \"{src,test}/**/*.ts\" --fix",
    "format": "prettier --write src",
    "test": "cross-env NODE_ENV=test jest",
    "test:watch": "cross-env NODE_ENV=test jest --watch",
    "test:cov": "cross-env NODE_ENV=test jest --coverage",
    "test:debug": "cross-env NODE_ENV=test node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "cross-env NODE_ENV=test jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/apollo": "^10.0.22",
    "@nestjs/axios": "^0.1.0",
    "@nestjs/common": "^9.0.11",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.11",
    "@nestjs/graphql": "^10.0.22",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.11",
    "@nestjs/platform-socket.io": "^9.0.11",
    "@nestjs/swagger": "^6.0.5",
    "@nestjs/terminus": "^9.1.1",
    "@nestjs/throttler": "^3.0.0",
    "@nestjs/websockets": "^9.0.11",
    "@prisma/client": "^4.3.1",
    "apollo-server-express": "^3.10.1",
    "body-parser": "^1.20.0",
    "cache-manager": "^4.1.0",
    "cache-manager-redis-store": "^2.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "compression": "^1.7.4",
    "connect-redis": "^6.1.3",
    "cookie-parser": "^1.4.6",
    "csurf": "^1.11.0",
    "express-session": "^1.17.3",
    "graphql": "^16.6.0",
    "graphql-iso-date": "^3.6.1",
    "graphql-subscriptions": "^2.0.0",
    "graphql-ws": "^5.10.1",
    "helmet": "^5.1.1",
    "joi": "^17.6.0",
    "passport": "^0.6.0",
    "passport-discord": "^0.1.4",
    "redis": "^4.3.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.5.6",
    "stripe": "^10.4.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.1",
    "@nestjs/testing": "^9.0.11",
    "@prisma/client": "^4.3.1",
    "@swc/cli": "^0.1.57",
    "@swc/core": "^1.2.242",
    "@types/cache-manager": "^4.0.1",
    "@types/cache-manager-redis-store": "^2.0.1",
    "@types/compression": "^1.7.2",
    "@types/connect-redis": "^0.0.18",
    "@types/cookie-parser": "^1.4.3",
    "@types/csurf": "^1.11.2",
    "@types/express": "^4.17.13",
    "@types/express-session": "^1.17.5",
    "@types/jest": "^28.1.7",
    "@types/passport": "^1.0.10",
    "@types/passport-discord": "^0.1.6",
    "@types/socket.io": "^3.0.2",
    "@types/supertest": "^2.0.12",
    "@types/validator": "^13.7.5",
    "chokidar": "^3.5.3",
    "concurrently": "^7.3.0",
    "config": "*",
    "discord-api-types": "^0.37.4",
    "eslint": "^8.22.0",
    "jest": "^28.1.3",
    "nodemon": "^2.0.19",
    "prisma": "^4.3.1",
    "prisma-nestjs-graphql": "^17.0.0",
    "rimraf": "^3.0.2",
    "source-map-support": "^0.5.21",
    "supertest": "^6.2.4",
    "ts-jest": "^28.0.8",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "tsconfig": "*",
    "tsconfig-paths": "^4.1.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "./",
    "modulePaths": [
      "<rootDir>"
    ],
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "moduleNameMapper": {
      "/^src/(.*)$/": "<rootDir>/src/$1"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
