# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Channel {
  application_id: String
  bitrate: Int
  default_auto_archive_duration: Float
  guild_id: String
  icon: String
  id: String!
  last_message_id: String
  last_pin_timestamp: String
  member: ThreadMember
  member_count: Int
  message_count: Int
  name: String
  nsfw: Boolean
  owner_id: String
  parent_id: String
  permission_overwrites: [OverWrite!]
  position: Float
  rate_limit_per_user: Int
  recipients: [User!]
  rtc_region: String
  thread_metadata: ThreadMetaData
  topic: String
  type: Float!
  user_limit: Int
  video_quality_mode: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Emojis {
  animated: Boolean
  available: Boolean
  id: String!
  managed: Boolean
  name: String!
  require_colons: Boolean
  roles: [String!]
  user: User
}

type Guild {
  afk_timeout: Int!
  bot: Boolean
  channels: [Channel!]
  description: String
  emojis: [Emojis!]!
  features: [String!]!
  icon: String
  id: String!
  member_count: Float!
  members: GuildMember
  name: String!
  nsfw_level: Float!
  owner: Boolean
  owner_id: String!
  permissions: String
  preferred_locale: String!
  premium_tier: Float!
  roles: [Roles!]!
  stickers: [Sticker!]!
  threads: [Channel!]
  unavailable: Boolean
}

type GuildBanLogs {
  bannedUser: LoggedUser!
  guildId: String!
  issuedBy: LoggedUser!
  issuedOn: DateTime!
  reason: String!
}

type GuildLogs {
  action: String!
  guildId: String!
  user: LoggedUser!
}

type GuildMember {
  avatar: String
  deaf: Boolean!
  joined_at: String!
  mute: Boolean!
  nick: String
  pending: Boolean
  premium_since: String
  roles: [String!]!
  user: User
}

type GuildPlugins {
  autoMod: Boolean
  blacklistedWords: [String!]
  channel: String
  defaultGlobalCooldown: Float
  djRole: String
  guildId: String!
  immortal: Boolean
  nsfw: Boolean
  plugins: [String!]
  ticketCategory: String
  ticketTranscriptChannel: String
}

type GuildTickets {
  channelId: String!
  closed: Boolean!
  guildId: String!
  locked: Boolean!
  memberId: String!
  ticketId: String!
  type: String!
}

"""
Guild Config for Quantum Bot Users
"""
type Guilds {
  banLogs: [GuildBanLogs!]
  defaultJoinRole: String
  guildId: String!
  logChannel: String
  logs: [GuildLogs!]
  maxTickets: Float
  plugins: GuildPlugins
  prefix: String
  premium: [PremiumTiers!]
  tickets: [GuildTickets!]
}

type LoggedUser {
  discriminator: String!
  id: String!
  username: String!
}

type OverWrite {
  allow: String!
  deny: String!
  id: String!
  type: Float!
}

"""
Premium tiers with for Quanty Bot
"""
enum PremiumTiers {
  FREE
  GOLD
  QUANTUM
  SILVER
}

type Query {
  guildConfig(guildId: String!): Guilds!
  guilds(guildId: String!): Guild!
  mutualGuilds: [Guild!]!
  user: Users!
}

type RoleTags {
  bot_id: String
  integration_id: String
}

type Roles {
  color: Float!
  hoist: Boolean!
  icon: String
  id: String!
  managed: Boolean!
  mentionable: Boolean!
  name: String!
  permissions: String!
  position: Float!
  tags: RoleTags
  unicode_emoji: String
}

type Sticker {
  asset: String!
  available: Boolean
  description: String!
  format_type: Float!
  guild_id: String
  id: String
  name: String!
  pack_id: String
  sort_value: Float
  tags: String!
  type: Float!
  user: User
}

type ThreadMember {
  flags: Float!
  id: String
  join_timestamp: String!
  user_id: String
}

type ThreadMetaData {
  archive_timestamp: String!
  archived: Boolean!
  auto_archive_duration: Float!
  invitable: Boolean
  locked: Boolean
}

type User {
  accent_color: Float
  avatar: String!
  banner: String
  bot: Boolean
  discriminator: String!
  email: String
  flags: Float
  id: String!
  locale: String
  mfa_enabled: Boolean
  premium_type: Float
  public_flags: Float
  system: Boolean
  username: String!
  verified: Boolean
}

"""
Returns the logged in user
"""
type Users {
  avatar: String!
  discordId: String!
  discriminator: String!
  email: String!
  locale: String!
  username: String!
  verified: Boolean!
}
