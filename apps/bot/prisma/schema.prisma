generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Customer {
  id             String              @id @unique @db.VarChar(255)
  /// @Validator.IsEmail()
  email          String?             @unique @db.VarChar(255)
  subscriptionId Boolean             @default(false)
  createdAt      DateTime            @default(now())
  user           User?               @relation(fields: [userId], references: [id])
  userId         String?             @unique @db.VarChar(64)
  subscription   GuildSubscription[]

  @@index([userId])
}

model Guild {
  id            String             @id @unique @db.VarChar(64)
  premium       Boolean            @default(false)
  prefix        String             @default("q!") @db.VarChar(10)
  subscription  GuildSubscription?
  guildSettings GuildSettings?
  guildPlugins  GuildPlugins?
}

model GuildPlugins {
  id      String  @id @unique @db.VarChar(64)
  autoMod Boolean @default(false)
  anime   Boolean @default(false)
  guild   Guild   @relation(fields: [id], references: [id])
}

model GuildSettings {
  id              String  @id @unique @db.VarChar(64)
  defaultJoinRole String  @default("@everyone") @db.VarChar(64)
  nsfw            Boolean @default(false)
  globalCooldown  Int     @default(0)
  djRole          String  @default("@everyone") @db.VarChar(64)
  musicTimeOut    Boolean @default(false)
  guild           Guild   @relation(fields: [id], references: [id])
}

model Price {
  id                String              @id @unique @db.VarChar(255)
  recurringInterval String?
  unit_amount       Int
  currency          String              @db.VarChar(4)
  type              PriceType
  product           Product             @relation(fields: [productId], references: [id])
  productId         String
  subscription      GuildSubscription[]

  @@index([productId])
}

model Product {
  id          String  @id @unique @db.VarChar(255)
  name        String  @db.VarChar(50)
  description String? @db.VarChar(350)
  price       Price[]
}

model GuildSubscription {
  id                   String              @id @unique @db.VarChar(255)
  status               Subscription_status @default(CANCELED)
  current_period_end   DateTime
  cancel_at_period_end Boolean             @default(false)
  guild                Guild               @relation(fields: [guildId], references: [id])
  guildId              String              @unique @db.VarChar(64)
  customer             Customer            @relation(fields: [customerId], references: [id])
  customerId           String              @db.VarChar(255)
  price                Price               @relation(fields: [priceId], references: [id])
  priceId              String              @db.VarChar(255)

  @@index([guildId])
  @@index([customerId])
  @@index([priceId])
}

model User {
  id                         String    @id @unique @db.VarChar(64)
  username                   String    @db.VarChar(64)
  discriminator              String    @db.Char(4)
  email                      String?   @unique @db.VarChar(254)
  avatar                     String?   @db.VarChar(254)
  createdAt                  DateTime  @default(now())
  locale                     String?   @db.VarChar(10)
  accessToken                String?   @db.VarChar(100)
  refreshToken               String?   @db.VarChar(100)
  acceptedTermsAndConditions Boolean   @default(false)
  customer                   Customer?
}

enum Subscription_status {
  ACTIVE
  CANCELED
  INCOMPLETE
}

enum PriceType {
  RECURRING
  ONE_TIME
}
